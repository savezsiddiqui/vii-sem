{"version":3,"sources":["components/BottomNav.js","components/TimeTable.js","App.js","serviceWorker.js","index.js"],"names":["days","BottomNav","setIndex","setLocal","Navbar","className","variant","Nav","style","overflowX","map","item","i","Link","onClick","key","localStorage","removeItem","TimeTable","local","useState","moment","isoWeekday","index","parseInt","format","hour","setHour","useEffect","setTimeout","Container","Row","minHeight","padding","onSwipedLeft","onSwipedRight","Col","xs","margin","background","height","width","Object","entries","value","hr","slice","indexOf","Setup","React","lazy","App","JSON","parse","getItem","setItem","stringify","fallback","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"gRAGMA,EAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAkBlCC,EAhBG,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC3B,OACI,kBAACC,EAAA,EAAD,CAAQC,UAAU,6CAA6CC,QAAQ,QACnE,kBAACC,EAAA,EAAD,CAAKC,MAAO,CAAEC,UAAW,WACpBT,EAAKU,KAAI,SAACC,EAAMC,GAAP,OACN,kBAACL,EAAA,EAAIM,KAAL,CAAUC,QAAS,WAAQZ,EAASU,IAAMG,IAAKH,GAAID,MAEvD,kBAACJ,EAAA,EAAIM,KAAL,CAAUC,QAAS,WACfE,aAAaC,WAAW,cACxBd,EAAS,QAFb,Y,iDCqDDe,EA3DG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOhB,EAAe,EAAfA,SAAe,EAChBiB,oBAAUC,MAASC,aAAe,GAAK,GADvB,mBACnCC,EADmC,KAC5BrB,EAD4B,OAElBkB,mBAASI,SAASH,MAASI,OAAO,OAFhB,mBAEnCC,EAFmC,KAE7BC,EAF6B,KAU1C,OANAC,qBAAU,WACTC,YAAW,WACVF,EAAQH,SAASH,MAASI,OAAO,SAC/B,OACD,CAACC,IAGH,kBAACI,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKvB,MAAO,CAAEwB,UAAW,QAASC,QAAS,cAC1C,kBAAC,IAAD,CACCC,aAAc,WAAQhC,GAAUqB,EAAQ,GAAK,IAC7CY,cAAe,WAAQjC,EAAmB,IAAVqB,EAAc,EAAIA,EAAQ,KAE1D,kBAACa,EAAA,EAAD,CAAKC,GAAI,GAAI7B,MAAO,CAAE8B,OAAQ,cAC7B,4BAAI,8BAAOnB,EAAMI,GAAN,MACX,yBAAKf,MAAO,CAAE+B,WAAY,UAAWC,OAAQ,SAAUC,MAAO,UAG9DC,OAAOC,QAAQxB,EAAMI,IAAQb,KAAI,YAAmB,IAAD,mBAAhBK,EAAgB,KAAX6B,EAAW,KACnD,GAAY,QAAR7B,EAAe,OAAO,KAC1B,IAAI8B,EAAKrB,SAAST,EAAI+B,MAAM,EAAG/B,EAAIgC,QAAQ,OAG3C,OAAIrB,KAFJmB,EAAKA,GAAM,EAAK,GAAKA,EAAMA,IAERtB,GAASF,MAASC,aAAe,EAElD,kBAACc,EAAA,EAAD,CAAKC,GAAI,GAAIhC,UAAU,YAAYG,MAAK,eAAK,UAAY,cAAgBO,IAAKA,GAC7E,wBAAIV,UAAU,2BAA2BU,GACzC,4BAAK6B,IAICC,IAAOnB,EAAO,GAAKH,GAASF,MAASC,aAAe,EAE3D,kBAACc,EAAA,EAAD,CAAKC,GAAI,GAAIhC,UAAU,YAAYG,MAAK,eAAK,UAAY,WAAaO,IAAKA,GAC1E,wBAAIV,UAAU,2BAA2BU,GACzC,4BAAK6B,IAMN,kBAACR,EAAA,EAAD,CAAKC,GAAI,GAAIhC,UAAU,OAAOU,IAAKA,GAClC,wBAAIV,UAAU,2BAA2BU,GACzC,4BAAK6B,SAOX,kBAAC,EAAD,CAAW1C,SAAUA,EAAUC,SAAUA,MCzDtC6C,G,MAAQC,IAAMC,MAAK,kBAAM,iCAuBhBC,EAhBH,WAAO,IAAD,EACS/B,mBALRgC,KAAKC,MAAMrC,aAAasC,QAAQ,gBAC9B,MAGH,mBACVnC,EADU,KACHhB,EADG,KAOjB,OAJAyB,qBAAU,WACTZ,aAAauC,QAAQ,aAAcH,KAAKI,UAAUrC,MAChD,CAACA,IAGH,yBAAKd,UAAU,aACd,kBAAC,WAAD,CAAUoD,SAAU,4CACR,OAAVtC,EAAiB,kBAAC6B,EAAD,CAAO7C,SAAUA,IAAe,kBAAC,EAAD,CAAWgB,MAAOA,EAAOhB,SAAUA,OCRnFuD,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC1FjEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDYnB,SAAkBtB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIsB,IAAIC,WAAwB9B,OAAOC,SAAS8B,MACpDC,SAAWhC,OAAOC,SAAS+B,OAIvC,OAGFhC,OAAOiC,iBAAiB,QAAQ,WAC9B,IAAM5B,EAAK,UAAMyB,WAAN,sBAEPhC,IAgEV,SAAiCO,EAAOC,GAEtC4B,MAAM7B,EAAO,CACX8B,QAAS,CAAE,iBAAkB,YAE5BzB,MAAK,SAAA0B,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYlD,QAAQ,cAG5CoB,UAAUC,cAAcgC,MAAM9B,MAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,MAAK,WAC7BV,OAAOC,SAASyC,eAKpBtC,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAwB,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OClC/BE,K","file":"static/js/main.d7af0277.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nconst days = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'];\r\n\r\nconst BottomNav = ({ setIndex, setLocal }) => {\r\n    return (\r\n        <Navbar className='fixed-bottom justify-content-center shadow' variant='dark'>\r\n            <Nav style={{ overflowX: 'scroll' }}>\r\n                {days.map((item, i) =>\r\n                    <Nav.Link onClick={() => { setIndex(i) }} key={i}>{item}</Nav.Link>\r\n                )}\r\n                <Nav.Link onClick={() => {\r\n                    localStorage.removeItem('time-table');\r\n                    setLocal(null);\r\n                }}>RESET</Nav.Link>\r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default BottomNav;\r\n","import React, { useState, useEffect } from 'react';\r\nimport BottomNav from './BottomNav';\r\nimport moment from 'moment';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Swipeable } from 'react-swipeable';\r\n\r\nconst TimeTable = ({ local, setLocal }) => {\r\n\tconst [index, setIndex] = useState((moment().isoWeekday() - 1) % 6);\r\n\tconst [hour, setHour] = useState(parseInt(moment().format('H')));\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetHour(parseInt(moment().format('H')));\r\n\t\t}, 60000)\r\n\t}, [hour])\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row style={{ minHeight: '100vh', padding: '5rem 1rem' }}>\r\n\t\t\t\t<Swipeable\r\n\t\t\t\t\tonSwipedLeft={() => { setIndex((index + 1) % 6) }}\r\n\t\t\t\t\tonSwipedRight={() => { setIndex(index === 0 ? 5 : index - 1) }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Col xs={12} style={{ margin: '2rem 0rem' }}>\r\n\t\t\t\t\t\t<h1><span>{local[index]['day']}</span></h1>\r\n\t\t\t\t\t\t<div style={{ background: '#f50057', height: '0.2rem', width: '43%' }}>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t{Object.entries(local[index]).map(([key, value]) => {\r\n\t\t\t\t\t\tif (key === 'day') return null\r\n\t\t\t\t\t\tlet hr = parseInt(key.slice(0, key.indexOf('-')));\r\n\t\t\t\t\t\thr = hr <= 5 ? (12 + hr) : hr;\r\n\r\n\t\t\t\t\t\tif (hour === hr && index == moment().isoWeekday() - 1) {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Col xs={12} className='my-4 glow' style={{ ['--color']: 'lightgreen' }} key={key}>\r\n\t\t\t\t\t\t\t\t\t<h4 className='font-weight-bolder mb-0'>{key}</h4>\r\n\t\t\t\t\t\t\t\t\t<h5>{value}</h5>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (hr === hour + 1 && index == moment().isoWeekday() - 1) {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Col xs={12} className='my-4 glow' style={{ ['--color']: '#ffd180' }} key={key}>\r\n\t\t\t\t\t\t\t\t\t<h4 className='font-weight-bolder mb-0'>{key}</h4>\r\n\t\t\t\t\t\t\t\t\t<h5>{value}</h5>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Col xs={12} className='my-4' key={key}>\r\n\t\t\t\t\t\t\t\t\t<h4 className='font-weight-bolder mb-0'>{key}</h4>\r\n\t\t\t\t\t\t\t\t\t<h5>{value}</h5>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Swipeable>\r\n\t\t\t</Row>\r\n\t\t\t<BottomNav setIndex={setIndex} setLocal={setLocal} />\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default TimeTable;\r\n","import React, { useState, useEffect, Suspense } from 'react';\r\nimport TimeTable from './components/TimeTable';\r\nimport './App.css';\r\nconst Setup = React.lazy(() => import('./components/Setup'));\r\n\r\nconst initialState = () => {\r\n\tconst savedMode = JSON.parse(localStorage.getItem('time-table'));\r\n\treturn savedMode || null;\r\n};\r\n\r\nconst App = () => {\r\n\tconst [local, setLocal] = useState(initialState());\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem('time-table', JSON.stringify(local));\r\n\t}, [local]);\r\n\r\n\treturn (\r\n\t\t<div className='dark-mode'>\r\n\t\t\t<Suspense fallback={<div>Loading...</div>}>\r\n\t\t\t\t{local === null ? <Setup setLocal={setLocal} /> : <TimeTable local={local} setLocal={setLocal} />}\r\n\t\t\t</Suspense>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}