{"version":3,"sources":["components/BottomNav.js","components/TimeTable.js","components/Setup.js","App.js","serviceWorker.js","index.js"],"names":["days","BottomNav","setIndex","setLocal","Navbar","className","variant","Nav","style","overflowX","map","item","i","Link","onClick","key","localStorage","removeItem","TimeTable","local","useState","moment","isoWeekday","index","hour","parseInt","format","Container","Row","minHeight","padding","Col","xs","background","height","width","Object","entries","value","hr","slice","indexOf","initialState","batch","e1","e2","e3","e4","Setup","formData","setFormData","onChange","event","target","name","Form","onSubmit","preventDefault","electives","e","toUpperCase","join","batchRegex","length","regex","RegExp","timeTable","schedule","forEach","newObject","entry","filter","match","subject","s","courses","find","a","includes","push","setItem","JSON","stringify","generator","parse","getItem","Group","Label","Control","type","size","placeholder","min","max","required","minLength","Button","marginTop","App","useEffect","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.258704f8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nconst days = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'];\r\n\r\nconst BottomNav = ({ setIndex, setLocal }) => {\r\n    return (\r\n        <Navbar className='fixed-bottom justify-content-center shadow' variant='dark'>\r\n            <Nav style={{ overflowX: 'scroll' }}>\r\n                {days.map((item, i) =>\r\n                    <Nav.Link onClick={() => { setIndex(i) }} key={i}>{item}</Nav.Link>\r\n                )}\r\n                <Nav.Link onClick={() => {\r\n                    localStorage.removeItem('time-table');\r\n                    setLocal(null);\r\n                }}>RESET</Nav.Link>\r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default BottomNav;\r\n","import React, { useState } from 'react';\r\nimport BottomNav from './BottomNav';\r\nimport moment from 'moment';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst TimeTable = ({ local, setLocal }) => {\r\n\tconst [index, setIndex] = useState((moment().isoWeekday() - 1) % 6);\r\n\tlet hour = parseInt(moment().format('H'));\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row style={{ minHeight: '100vh', padding: '5rem 1rem' }}>\r\n\t\t\t\t<Col xs={12} className='my-3'>\r\n\t\t\t\t\t<h1><span>{local[index]['day']}</span></h1>\r\n\t\t\t\t\t<div style={{ background: '#f50057', height: '0.2rem', width: '43%' }}>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t{Object.entries(local[index]).map(([key, value]) => {\r\n\t\t\t\t\tif (key !== 'day') {\r\n\t\t\t\t\t\tlet hr = parseInt(key.slice(0, key.indexOf('-')));\r\n\t\t\t\t\t\thr = hr <= 5 ? (12 + hr) : hr;\r\n\r\n\t\t\t\t\t\tif (hour === hr && index == moment().isoWeekday() - 1) {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Col xs={12} className='my-3 glow' style={{ ['--color']: 'lightgreen' }} key={key}>\r\n\t\t\t\t\t\t\t\t\t<h3 className='font-weight-bolder'>{key}</h3>\r\n\t\t\t\t\t\t\t\t\t<h4>{value}</h4>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (hr === hour + 1 && index == moment().isoWeekday() - 1) {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Col xs={12} className='my-3 glow' style={{ ['--color']: '#ffd180' }} key={key}>\r\n\t\t\t\t\t\t\t\t\t<h3 className='font-weight-bolder'>{key}</h3>\r\n\t\t\t\t\t\t\t\t\t<h4>{value}</h4>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Col xs={12} className='my-3' key={key}>\r\n\t\t\t\t\t\t\t\t\t<h3 className='font-weight-bolder'>{key}</h3>\r\n\t\t\t\t\t\t\t\t\t<h4>{value}</h4>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t\t</Row>\r\n\t\t\t<BottomNav setIndex={setIndex} setLocal={setLocal} />\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default TimeTable;\r\n","import React, { useState } from 'react';\r\nimport { Row, Col, Form, Button, Container } from 'react-bootstrap';\r\nimport schedule from '../data/schedule.json';\r\nimport courses from '../data/course-codes.json';\r\n\r\nconst initialState = { batch: '', e1: '', e2: '', e3: '', e4: '' };\r\n\r\nconst generator = ({ batch, e1, e2, e3, e4 }) => {\r\n\r\n\tlet electives = [e1, e2, e3, e4].map(e => e.toUpperCase()).join('|');\r\n\r\n\tconst batchRegex = batch.length == 1 ?\r\n\t\t'(B' + batch + '|B\\\\(|LABC\\\\(|B[1-' + batch +\r\n\t\t']-([' + batch + '-9]|1\\\\d)|B.*,' + batch + ')'\r\n\t\t: '(B' + batch + '|B\\\\(|LABC\\\\(|B.*(1[0-' + batch[1] +\r\n\t\t']-1[' + batch[1] + '-4]|,' + batch + '))'\r\n\r\n\tconst regex = new RegExp(batchRegex + \".*(\" + electives + ')');\r\n\r\n\tlet timeTable = [];\r\n\tschedule.forEach(item => {\r\n\t\tlet newObject = {};\r\n\t\tObject.entries(item).forEach(([key, value]) => {\r\n\t\t\tif (key === 'day' || value[0] === \"LUNCH\") {\r\n\t\t\t\tnewObject[key] = value[0];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet entry = value.filter(item => item.match(regex))[0];\r\n\t\t\t\tif (entry) {\r\n\r\n\t\t\t\t\tlet s = entry.indexOf('(');\r\n\t\t\t\t\tlet e = entry.indexOf(')');\r\n\t\t\t\t\tlet subject;\r\n\t\t\t\t\tif (entry)\r\n\t\t\t\t\t\tsubject = entry.slice(s + 1, e);\r\n\r\n\t\t\t\t\tsubject = Object.entries(courses).find(([a, b]) => a.includes(subject))[1];\r\n\t\t\t\t\tnewObject[key] = entry.slice(0, s) + ', ' + subject;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\ttimeTable.push(newObject);\r\n\t})\r\n\tlocalStorage.setItem('time-table', JSON.stringify(timeTable));\r\n}\r\n\r\nconst Setup = ({ setLocal }) => {\r\n\tconst [formData, setFormData] = useState(initialState);\r\n\tconst { batch, e1, e2, e3, e4 } = formData;\r\n\r\n\tconst onSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tgenerator(formData);\r\n\t\tsetLocal(JSON.parse(localStorage.getItem('time-table')));\r\n\t}\r\n\r\n\tconst onChange = (event) => {\r\n\t\tsetFormData({ ...formData, [event.target.name]: event.target.value });\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container style={{ padding: '5rem 1rem' }}>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col xs={12}>\r\n\t\t\t\t\t<Form onSubmit={onSubmit}>\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Label>Batch</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control type='number' name='batch' onChange={(e) => { onChange(e) }} value={batch} size='lg' placeholder='14' min='1' max='14' required />\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Form.Group className='mt-5'>\r\n\t\t\t\t\t\t\t<Form.Label>Electives</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control type='text' name='e1' value={e1} onChange={(e) => { onChange(e) }} size='lg' placeholder='17B1NCI732' minLength='5' required />\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Control type='text' name='e2' value={e2} onChange={(e) => { onChange(e) }} size='lg' placeholder='CS427' minLength='5' required />\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Control type='text' name='e3' value={e3} onChange={(e) => { onChange(e) }} size='lg' placeholder='CS436' minLength='5' required />\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Control type='text' name='e4' value={e4} onChange={(e) => { onChange(e) }} size='lg' placeholder='HS211' minLength='5' required />\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Button type='submit' variant='dark' size='lg'>Submit</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={12} className='text-muted text-center' style={{ marginTop: '7rem' }}>\r\n\t\t\t\t\t<h2>DISCLAIMER</h2>\r\n\t\t\t\t\t<p>Only works for B batch.</p>\r\n\t\t\t\t\t<p>Enter you subject-codes exactly the same way as they appear in the excel sheet.\r\n\t\t\t\tOtherwize the regex mechanism won't work.</p>\r\n\t\t\t\t\t<p>Don't ask me to build a select instead of a text field.\r\n\t\t\t\tIt takes time, I don't get paid for it.</p>\r\n\t\t\t\t\t<p>If you like my work, and want to buy me a coffee,\r\n\t\t\t\tGoogle Pay at savezsiddiqui@oksbi</p>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default Setup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport TimeTable from './components/TimeTable';\r\nimport Setup from './components/Setup';\r\nimport './App.css';\r\n\r\nconst initialState = () => {\r\n\tconst savedMode = JSON.parse(localStorage.getItem('time-table'));\r\n\treturn savedMode || null;\r\n};\r\n\r\nconst App = () => {\r\n\tconst [local, setLocal] = useState(initialState());\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem('time-table', JSON.stringify(local));\r\n\t}, [local]);\r\n\r\n\treturn (\r\n\t\t<div className='dark-mode'>\r\n\t\t\t{local === null ? <Setup setLocal={setLocal} /> : <TimeTable local={local} setLocal={setLocal} />}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}